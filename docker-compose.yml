# version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    # networks:
    #   - mongo_network
      
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: backend
    volumes:
      - ./api:/api  # Mount the local app directory to the container
      - /api/node_modules  # Prevent node_modules from being overwritten by the host
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      - PORT=${API_PORT}
      - MONGO_DB=${MONGO_DB}
      - MONGO_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DB}?authSource=admin
      - NODE_ENV=development
    depends_on:
      - mongodb
    command: npm run dev

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: frontend
    volumes:
      - ./app:/app  # Mount the local app directory to the container
      - /app/node_modules  # Prevent node_modules from being overwritten by the host
      - /app/.next
    restart: always
    ports:
      - "${APP_PORT}:${APP_PORT}"
    environment:
      - API_URL=http://localhost:${API_PORT}
      - NODE_ENV=development
      #- WATCHPACK_POLLING=true
    depends_on:
      - api
    command: npm run dev

volumes:
  mongo-data:

networks:
  mongo_network:
    driver: bridge